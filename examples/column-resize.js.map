{"version":3,"sources":["webpack:///./examples/column-resize.js"],"names":["ResizeableTitle","props","onResize","width","restProps","propTypes","PropTypes","func","isRequired","number","Demo","state","columns","title","dataIndex","key","id","render","components","header","cell","data","a","b","c","d","handleResize","e","size","setState","nextColumns","index","map","col","onHeaderCell","column","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"examples/column-resize.js","sourcesContent":["/* eslint-disable no-console,func-names,react/no-multi-comp */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport Table from 'rc-table';\nimport 'rc-table/assets/index.less';\nimport { Resizable } from 'react-resizable';\nimport 'react-resizable/css/styles.css';\n\nconst ResizeableTitle = (props) => {\n  const { onResize, width, ...restProps } = props;\n\n  if (!width) {\n    return <th {...restProps} />;\n  }\n\n  return (\n    <Resizable width={width} height={0} onResize={onResize}>\n      <th {...restProps} />\n    </Resizable>\n  );\n};\n\nResizeableTitle.propTypes = {\n  onResize: PropTypes.func.isRequired,\n  width: PropTypes.number,\n};\n\nclass Demo extends React.Component {\n  state = {\n    columns: [\n      { title: 'title1', dataIndex: 'a', key: 'a', width: 100 },\n      { id: '123', title: 'title2', dataIndex: 'b', key: 'b', width: 100 },\n      { title: 'title3', dataIndex: 'c', key: 'c', width: 200 },\n      {\n        title: 'Operations', dataIndex: '', key: 'd', render() {\n          return <a href=\"#\">Operations</a>;\n        },\n      },\n    ],\n  }\n\n  components = {\n    header: {\n      cell: ResizeableTitle,\n    },\n  }\n\n  data = [\n    { a: '123', key: '1' },\n    { a: 'cdd', b: 'edd', key: '2' },\n    { a: '1333', c: 'eee', d: 2, key: '3' },\n  ]\n\n  handleResize = index => (e, { size }) => {\n    this.setState(({ columns }) => {\n      const nextColumns = [...columns];\n      nextColumns[index] = {\n        ...nextColumns[index],\n        width: size.width,\n      };\n      return { columns: nextColumns };\n    });\n  }\n\n  render() {\n    const columns = this.state.columns.map((col, index) => ({\n      ...col,\n      onHeaderCell: (column) => ({\n        width: column.width,\n        onResize: this.handleResize(index),\n      }),\n    }));\n\n    return (\n      <div>\n        <h2>Integrate with react-resizable</h2>\n        <Table components={this.components} columns={columns} data={this.data} />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Demo />, document.getElementById('__react-content'));\n\n\n\n// WEBPACK FOOTER //\n// ./examples/column-resize.js"],"sourceRoot":""}